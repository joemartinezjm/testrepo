name: Build and Push Container Images

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changed folders with Dockerfiles
        id: filter
        run: |
          # Find all directories containing a Dockerfile (ignore .git and hidden folders)
          ALL_FOLDERS=$(find . -mindepth 1 -maxdepth 1 -type d ! -name ".git" ! -name ".*" | sed 's|^\./||' | jq -R -s -c 'split("\n")[:-1]')

          # Detect changed folders (since last commit)
          CHANGED_FOLDERS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | awk -F/ '{print $1}' | sort -u | grep -Ev '^(\.git|\.github)$' | jq -R -s -c 'split("\n")[:-1]')

          # Use changed folders if detected, otherwise use all folders
          if [[ "$CHANGED_FOLDERS" == "[]" ]]; then
            echo "No specific changes detected, building all images."
            echo "matrix=$ALL_FOLDERS" >> "$GITHUB_OUTPUT"
          else
            echo "Changed folders detected: $CHANGED_FOLDERS"
            echo "matrix=$CHANGED_FOLDERS" >> "$GITHUB_OUTPUT"
          fi
          
  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.matrix != '[]' }} # Only run if there are changes
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
      
    steps:
      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME_LC=${REPO_NAME,,}" >> "$GITHUB_ENV"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for ${{ matrix.folder }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME_LC }}/${{ matrix.folder }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      

      - name: Build and push Docker image for ${{ matrix.folder }}
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.folder }}
          sbom: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_NAME_LC }}/${{ matrix.folder }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: false
